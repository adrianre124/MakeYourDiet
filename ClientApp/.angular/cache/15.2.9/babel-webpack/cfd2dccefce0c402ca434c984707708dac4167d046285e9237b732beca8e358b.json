{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { getBsVer, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport * as i3 from 'ngx-bootstrap/positioning';\nimport { PlacementForBs5, PositioningService } from 'ngx-bootstrap/positioning';\nimport { __decorate, __metadata } from 'tslib';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/** Default values provider for tooltip */\nconst _c0 = [\"*\"];\nclass TooltipConfig {\n  constructor() {\n    /** sets disable adaptive position */\n    this.adaptivePosition = true;\n    /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n    this.placement = 'top';\n    /** array of event names which triggers tooltip opening */\n    this.triggers = 'hover focus';\n    /** delay before showing the tooltip */\n    this.delay = 0;\n  }\n}\nTooltipConfig.ɵfac = function TooltipConfig_Factory(t) {\n  return new (t || TooltipConfig)();\n};\nTooltipConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipConfig,\n  factory: TooltipConfig.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass TooltipContainerComponent {\n  get _bsVersions() {\n    return getBsVer();\n  }\n  constructor(config) {\n    Object.assign(this, config);\n  }\n  ngAfterViewInit() {\n    this.classMap = {\n      in: false,\n      fade: false\n    };\n    if (this.placement) {\n      if (this._bsVersions.isBs5) {\n        this.placement = PlacementForBs5[this.placement];\n      }\n      this.classMap[this.placement] = true;\n    }\n    this.classMap[`tooltip-${this.placement}`] = true;\n    this.classMap[\"in\"] = true;\n    if (this.animation) {\n      this.classMap[\"fade\"] = true;\n    }\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\n}\nTooltipContainerComponent.ɵfac = function TooltipContainerComponent_Factory(t) {\n  return new (t || TooltipContainerComponent)(i0.ɵɵdirectiveInject(TooltipConfig));\n};\nTooltipContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContainerComponent,\n  selectors: [[\"bs-tooltip-container\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 3,\n  hostBindings: function TooltipContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id);\n      i0.ɵɵclassMap(\"show tooltip in tooltip-\" + ctx.placement + \" \" + \"bs-tooltip-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n    }\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"tooltip-arrow\", \"arrow\"], [1, \"tooltip-inner\"]],\n  template: function TooltipContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".tooltip[_nghost-%COMP%]{display:block;pointer-events:none;position:absolute}.tooltip[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]{position:absolute}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-tooltip-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class]': '\"show tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n        '[attr.id]': 'this.id',\n        role: 'tooltip'\n      },\n      template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `,\n      styles: [\":host.tooltip{display:block;pointer-events:none;position:absolute}:host.tooltip .tooltip-arrow{position:absolute}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: TooltipConfig\n    }];\n  }, null);\n})();\nlet id = 0;\nclass TooltipDirective {\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  get isOpen() {\n    return this._tooltip.isShown;\n  }\n  set isOpen(value) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /** @deprecated - please use `tooltip` instead */\n  set htmlContent(value) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n  /** @deprecated - please use `placement` instead */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _placement(value) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n  /** @deprecated - please use `isOpen` instead */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _isOpen(value) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n  get _isOpen() {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n  /** @deprecated - please use `isDisabled` instead */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _enable(value) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = !value;\n  }\n  get _enable() {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n  /** @deprecated - please use `container=\"body\"` instead */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _appendToBody(value) {\n    warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n    this.container = value ? 'body' : this.container;\n  }\n  get _appendToBody() {\n    warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n    return this.container === 'body';\n  }\n  /** @deprecated - will replaced with customClass */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _popupClass(value) {\n    warnOnce('tooltipClass deprecated');\n  }\n  /** @deprecated - removed */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _tooltipContext(value) {\n    warnOnce('tooltipContext deprecated');\n  }\n  /** @deprecated */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set _tooltipPopupDelay(value) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n  /** @deprecated -  please use `triggers` instead */\n  get _tooltipTrigger() {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n  set _tooltipTrigger(value) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n  constructor(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._positionService = _positionService;\n    this.tooltipId = id++;\n    /** sets disable adaptive position */\n    this.adaptivePosition = true;\n    /** Fired when tooltip content changes */\n    this.tooltipChange = new EventEmitter();\n    /**\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n    this.placement = 'top';\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n    this.triggers = 'hover focus';\n    /**\n     * Css class for tooltip container\n     */\n    this.containerClass = '';\n    /**\n     * Allows to disable tooltip\n     */\n    this.isDisabled = false;\n    /**\n     * Delay before showing the tooltip\n     */\n    this.delay = 0;\n    /** @deprecated - removed, will be added to configuration */\n    this.tooltipAnimation = true;\n    /** @deprecated */\n    this.tooltipFadeDuration = 150;\n    /** @deprecated */\n    this.tooltipStateChanged = new EventEmitter();\n    this._tooltip = cis.createLoader(this._elementRef, _viewContainerRef, this._renderer).provide({\n      provide: TooltipConfig,\n      useValue: config\n    });\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n  ngOnInit() {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe(value => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n    this.onShown.subscribe(() => {\n      this.setAriaDescribedBy();\n    });\n    this.onHidden.subscribe(() => {\n      this.setAriaDescribedBy();\n    });\n  }\n  setAriaDescribedBy() {\n    this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : void 0;\n    if (this._ariaDescribedby) {\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n    } else {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n    }\n  }\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle() {\n    if (this.isOpen) {\n      return this.hide();\n    }\n    this.show();\n  }\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show() {\n    this._positionService.setOptions({\n      modifiers: {\n        flip: {\n          enabled: this.adaptivePosition\n        },\n        preventOverflow: {\n          enabled: this.adaptivePosition,\n          boundariesElement: this.boundariesElement || 'scrollParent'\n        }\n      }\n    });\n    if (this.isOpen || this.isDisabled || this._delayTimeoutId || !this.tooltip) {\n      return;\n    }\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n      this._tooltip.attach(TooltipContainerComponent).to(this.container).position({\n        attachment: this.placement\n      }).show({\n        content: this.tooltip,\n        placement: this.placement,\n        containerClass: this.containerClass,\n        id: `tooltip-${this.tooltipId}`\n      });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n    if (this.delay) {\n      if (this._delaySubscription) {\n        this._delaySubscription.unsubscribe();\n      }\n      this._delaySubscription = timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n      if (this.triggers) {\n        parseTriggers(this.triggers).forEach(trigger => {\n          if (!trigger.close) {\n            return;\n          }\n          this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, () => {\n            this._delaySubscription?.unsubscribe();\n            cancelDelayedTooltipShowing();\n          });\n        });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide() {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n    if (!this._tooltip.isShown) {\n      return;\n    }\n    if (this._tooltip.instance?.classMap) {\n      this._tooltip.instance.classMap[\"in\"] = false;\n    }\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this.tooltipFadeDuration);\n  }\n  ngOnDestroy() {\n    this._tooltip.dispose();\n    this.tooltipChange.unsubscribe();\n    if (this._delaySubscription) {\n      this._delaySubscription.unsubscribe();\n    }\n    this.onShown.unsubscribe();\n    this.onHidden.unsubscribe();\n  }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.ComponentLoaderFactory), i0.ɵɵdirectiveInject(TooltipConfig), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3.PositioningService));\n};\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"tooltip\", \"\"], [\"\", \"tooltipHtml\", \"\"]],\n  inputs: {\n    adaptivePosition: \"adaptivePosition\",\n    tooltip: \"tooltip\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    containerClass: \"containerClass\",\n    boundariesElement: \"boundariesElement\",\n    isOpen: \"isOpen\",\n    isDisabled: \"isDisabled\",\n    delay: \"delay\",\n    htmlContent: [\"tooltipHtml\", \"htmlContent\"],\n    _placement: [\"tooltipPlacement\", \"_placement\"],\n    _isOpen: [\"tooltipIsOpen\", \"_isOpen\"],\n    _enable: [\"tooltipEnable\", \"_enable\"],\n    _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"],\n    tooltipAnimation: \"tooltipAnimation\",\n    _popupClass: [\"tooltipClass\", \"_popupClass\"],\n    _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"],\n    _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"],\n    tooltipFadeDuration: \"tooltipFadeDuration\",\n    _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"]\n  },\n  outputs: {\n    tooltipChange: \"tooltipChange\",\n    onShown: \"onShown\",\n    onHidden: \"onHidden\",\n    tooltipStateChanged: \"tooltipStateChanged\"\n  },\n  exportAs: [\"bs-tooltip\"]\n});\n__decorate([OnChange(), __metadata(\"design:type\", Object)], TooltipDirective.prototype, \"tooltip\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tooltip], [tooltipHtml]',\n      exportAs: 'bs-tooltip'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: i1.ComponentLoaderFactory\n    }, {\n      type: TooltipConfig\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i3.PositioningService\n    }];\n  }, {\n    adaptivePosition: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipChange: [{\n      type: Output\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    boundariesElement: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    htmlContent: [{\n      type: Input,\n      args: ['tooltipHtml']\n    }],\n    _placement: [{\n      type: Input,\n      args: ['tooltipPlacement']\n    }],\n    _isOpen: [{\n      type: Input,\n      args: ['tooltipIsOpen']\n    }],\n    _enable: [{\n      type: Input,\n      args: ['tooltipEnable']\n    }],\n    _appendToBody: [{\n      type: Input,\n      args: ['tooltipAppendToBody']\n    }],\n    tooltipAnimation: [{\n      type: Input\n    }],\n    _popupClass: [{\n      type: Input,\n      args: ['tooltipClass']\n    }],\n    _tooltipContext: [{\n      type: Input,\n      args: ['tooltipContext']\n    }],\n    _tooltipPopupDelay: [{\n      type: Input,\n      args: ['tooltipPopupDelay']\n    }],\n    tooltipFadeDuration: [{\n      type: Input\n    }],\n    _tooltipTrigger: [{\n      type: Input,\n      args: ['tooltipTrigger']\n    }],\n    tooltipStateChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass TooltipModule {\n  static forRoot() {\n    return {\n      ngModule: TooltipModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TooltipDirective, TooltipContainerComponent],\n      exports: [TooltipDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };","map":{"version":3,"names":["i0","Injectable","Component","ChangeDetectionStrategy","EventEmitter","Directive","Input","Output","NgModule","getBsVer","warnOnce","parseTriggers","OnChange","i3","PlacementForBs5","PositioningService","__decorate","__metadata","i1","ComponentLoaderFactory","timer","CommonModule","TooltipConfig","constructor","adaptivePosition","placement","triggers","delay","ɵfac","ɵprov","type","args","providedIn","TooltipContainerComponent","_bsVersions","config","Object","assign","ngAfterViewInit","classMap","in","fade","isBs5","animation","containerClass","ɵcmp","selector","changeDetection","OnPush","host","role","template","styles","id","TooltipDirective","isOpen","_tooltip","isShown","value","show","hide","htmlContent","tooltip","_placement","_isOpen","_enable","isDisabled","_appendToBody","container","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","toString","_viewContainerRef","cis","_elementRef","_renderer","_positionService","tooltipId","tooltipChange","tooltipAnimation","tooltipFadeDuration","tooltipStateChanged","createLoader","provide","useValue","onShown","onHidden","ngOnInit","listen","subscribe","setAriaDescribedBy","_ariaDescribedby","setAttribute","nativeElement","removeAttribute","toggle","setOptions","modifiers","flip","enabled","preventOverflow","boundariesElement","_delayTimeoutId","showTooltip","undefined","attach","to","position","attachment","content","cancelDelayedTooltipShowing","_tooltipCancelShowFn","_delaySubscription","unsubscribe","forEach","trigger","close","clearTimeout","instance","setTimeout","ngOnDestroy","dispose","ViewContainerRef","ElementRef","Renderer2","ɵdir","prototype","exportAs","TooltipModule","forRoot","ngModule","providers","ɵmod","ɵinj","imports","declarations","exports"],"sources":["D:/CSharp/MakeYourDiet/ClientApp/node_modules/ngx-bootstrap/tooltip/fesm2022/ngx-bootstrap-tooltip.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { getBsVer, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport * as i3 from 'ngx-bootstrap/positioning';\nimport { PlacementForBs5, PositioningService } from 'ngx-bootstrap/positioning';\nimport { __decorate, __metadata } from 'tslib';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/** Default values provider for tooltip */\nclass TooltipConfig {\n    constructor() {\n        /** sets disable adaptive position */\n        this.adaptivePosition = true;\n        /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n        this.placement = 'top';\n        /** array of event names which triggers tooltip opening */\n        this.triggers = 'hover focus';\n        /** delay before showing the tooltip */\n        this.delay = 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass TooltipContainerComponent {\n    get _bsVersions() {\n        return getBsVer();\n    }\n    constructor(config) {\n        Object.assign(this, config);\n    }\n    ngAfterViewInit() {\n        this.classMap = { in: false, fade: false };\n        if (this.placement) {\n            if (this._bsVersions.isBs5) {\n                this.placement = PlacementForBs5[this.placement];\n            }\n            this.classMap[this.placement] = true;\n        }\n        this.classMap[`tooltip-${this.placement}`] = true;\n        this.classMap[\"in\"] = true;\n        if (this.animation) {\n            this.classMap[\"fade\"] = true;\n        }\n        if (this.containerClass) {\n            this.classMap[this.containerClass] = true;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipContainerComponent, deps: [{ token: TooltipConfig }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.4\", type: TooltipContainerComponent, selector: \"bs-tooltip-container\", host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"show tooltip in tooltip-\\\" + placement + \\\" \\\" + \\\"bs-tooltip-\\\" + placement + \\\" \\\" + placement + \\\" \\\" + containerClass\", \"attr.id\": \"this.id\" } }, ngImport: i0, template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `, isInline: true, styles: [\":host.tooltip{display:block;pointer-events:none;position:absolute}:host.tooltip .tooltip-arrow{position:absolute}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'bs-tooltip-container', changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[class]': '\"show tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n                        '[attr.id]': 'this.id',\n                        role: 'tooltip'\n                    }, template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `, styles: [\":host.tooltip{display:block;pointer-events:none;position:absolute}:host.tooltip .tooltip-arrow{position:absolute}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TooltipConfig }]; } });\n\nlet id = 0;\nclass TooltipDirective {\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    get isOpen() {\n        return this._tooltip.isShown;\n    }\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    /** @deprecated - please use `tooltip` instead */\n    set htmlContent(value) {\n        warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n        this.tooltip = value;\n    }\n    /** @deprecated - please use `placement` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _placement(value) {\n        warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n        this.placement = value;\n    }\n    /** @deprecated - please use `isOpen` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _isOpen(value) {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        this.isOpen = value;\n    }\n    get _isOpen() {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        return this.isOpen;\n    }\n    /** @deprecated - please use `isDisabled` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _enable(value) {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        this.isDisabled = !value;\n    }\n    get _enable() {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        return this.isDisabled;\n    }\n    /** @deprecated - please use `container=\"body\"` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _appendToBody(value) {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        this.container = value ? 'body' : this.container;\n    }\n    get _appendToBody() {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        return this.container === 'body';\n    }\n    /** @deprecated - will replaced with customClass */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _popupClass(value) {\n        warnOnce('tooltipClass deprecated');\n    }\n    /** @deprecated - removed */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _tooltipContext(value) {\n        warnOnce('tooltipContext deprecated');\n    }\n    /** @deprecated */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _tooltipPopupDelay(value) {\n        warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n        this.delay = value;\n    }\n    /** @deprecated -  please use `triggers` instead */\n    get _tooltipTrigger() {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        return this.triggers;\n    }\n    set _tooltipTrigger(value) {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        this.triggers = (value || '').toString();\n    }\n    constructor(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._positionService = _positionService;\n        this.tooltipId = id++;\n        /** sets disable adaptive position */\n        this.adaptivePosition = true;\n        /** Fired when tooltip content changes */\n        this.tooltipChange = new EventEmitter();\n        /**\n         * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n         */\n        this.placement = 'top';\n        /**\n         * Specifies events that should trigger. Supports a space separated list of\n         * event names.\n         */\n        this.triggers = 'hover focus';\n        /**\n         * Css class for tooltip container\n         */\n        this.containerClass = '';\n        /**\n         * Allows to disable tooltip\n         */\n        this.isDisabled = false;\n        /**\n         * Delay before showing the tooltip\n         */\n        this.delay = 0;\n        /** @deprecated - removed, will be added to configuration */\n        this.tooltipAnimation = true;\n        /** @deprecated */\n        this.tooltipFadeDuration = 150;\n        /** @deprecated */\n        this.tooltipStateChanged = new EventEmitter();\n        this._tooltip = cis\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\n            .provide({ provide: TooltipConfig, useValue: config });\n        Object.assign(this, config);\n        this.onShown = this._tooltip.onShown;\n        this.onHidden = this._tooltip.onHidden;\n    }\n    ngOnInit() {\n        this._tooltip.listen({\n            triggers: this.triggers,\n            show: () => this.show()\n        });\n        this.tooltipChange.subscribe((value) => {\n            if (!value) {\n                this._tooltip.hide();\n            }\n        });\n        this.onShown.subscribe(() => {\n            this.setAriaDescribedBy();\n        });\n        this.onHidden.subscribe(() => {\n            this.setAriaDescribedBy();\n        });\n    }\n    setAriaDescribedBy() {\n        this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : void 0;\n        if (this._ariaDescribedby) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n        }\n        else {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        }\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    toggle() {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    }\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    show() {\n        this._positionService.setOptions({\n            modifiers: {\n                flip: {\n                    enabled: this.adaptivePosition\n                },\n                preventOverflow: {\n                    enabled: this.adaptivePosition,\n                    boundariesElement: this.boundariesElement || 'scrollParent'\n                }\n            }\n        });\n        if (this.isOpen ||\n            this.isDisabled ||\n            this._delayTimeoutId ||\n            !this.tooltip) {\n            return;\n        }\n        const showTooltip = () => {\n            if (this._delayTimeoutId) {\n                this._delayTimeoutId = undefined;\n            }\n            this._tooltip\n                .attach(TooltipContainerComponent)\n                .to(this.container)\n                .position({ attachment: this.placement })\n                .show({\n                content: this.tooltip,\n                placement: this.placement,\n                containerClass: this.containerClass,\n                id: `tooltip-${this.tooltipId}`\n            });\n        };\n        const cancelDelayedTooltipShowing = () => {\n            if (this._tooltipCancelShowFn) {\n                this._tooltipCancelShowFn();\n            }\n        };\n        if (this.delay) {\n            if (this._delaySubscription) {\n                this._delaySubscription.unsubscribe();\n            }\n            this._delaySubscription = timer(this.delay).subscribe(() => {\n                showTooltip();\n                cancelDelayedTooltipShowing();\n            });\n            if (this.triggers) {\n                parseTriggers(this.triggers)\n                    .forEach((trigger) => {\n                    if (!trigger.close) {\n                        return;\n                    }\n                    this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, () => {\n                        this._delaySubscription?.unsubscribe();\n                        cancelDelayedTooltipShowing();\n                    });\n                });\n            }\n        }\n        else {\n            showTooltip();\n        }\n    }\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    hide() {\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (!this._tooltip.isShown) {\n            return;\n        }\n        if (this._tooltip.instance?.classMap) {\n            this._tooltip.instance.classMap[\"in\"] = false;\n        }\n        setTimeout(() => {\n            this._tooltip.hide();\n        }, this.tooltipFadeDuration);\n    }\n    ngOnDestroy() {\n        this._tooltip.dispose();\n        this.tooltipChange.unsubscribe();\n        if (this._delaySubscription) {\n            this._delaySubscription.unsubscribe();\n        }\n        this.onShown.unsubscribe();\n        this.onHidden.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipDirective, deps: [{ token: i0.ViewContainerRef }, { token: i1.ComponentLoaderFactory }, { token: TooltipConfig }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i3.PositioningService }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.4\", type: TooltipDirective, selector: \"[tooltip], [tooltipHtml]\", inputs: { adaptivePosition: \"adaptivePosition\", tooltip: \"tooltip\", placement: \"placement\", triggers: \"triggers\", container: \"container\", containerClass: \"containerClass\", boundariesElement: \"boundariesElement\", isOpen: \"isOpen\", isDisabled: \"isDisabled\", delay: \"delay\", htmlContent: [\"tooltipHtml\", \"htmlContent\"], _placement: [\"tooltipPlacement\", \"_placement\"], _isOpen: [\"tooltipIsOpen\", \"_isOpen\"], _enable: [\"tooltipEnable\", \"_enable\"], _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"], tooltipAnimation: \"tooltipAnimation\", _popupClass: [\"tooltipClass\", \"_popupClass\"], _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"], _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"], tooltipFadeDuration: \"tooltipFadeDuration\", _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"] }, outputs: { tooltipChange: \"tooltipChange\", onShown: \"onShown\", onHidden: \"onHidden\", tooltipStateChanged: \"tooltipStateChanged\" }, exportAs: [\"bs-tooltip\"], ngImport: i0 }); }\n}\n__decorate([\n    OnChange(),\n    __metadata(\"design:type\", Object)\n], TooltipDirective.prototype, \"tooltip\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tooltip], [tooltipHtml]',\n                    exportAs: 'bs-tooltip'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i1.ComponentLoaderFactory }, { type: TooltipConfig }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i3.PositioningService }]; }, propDecorators: { adaptivePosition: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipChange: [{\n                type: Output\n            }], placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], containerClass: [{\n                type: Input\n            }], boundariesElement: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], onShown: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], htmlContent: [{\n                type: Input,\n                args: ['tooltipHtml']\n            }], _placement: [{\n                type: Input,\n                args: ['tooltipPlacement']\n            }], _isOpen: [{\n                type: Input,\n                args: ['tooltipIsOpen']\n            }], _enable: [{\n                type: Input,\n                args: ['tooltipEnable']\n            }], _appendToBody: [{\n                type: Input,\n                args: ['tooltipAppendToBody']\n            }], tooltipAnimation: [{\n                type: Input\n            }], _popupClass: [{\n                type: Input,\n                args: ['tooltipClass']\n            }], _tooltipContext: [{\n                type: Input,\n                args: ['tooltipContext']\n            }], _tooltipPopupDelay: [{\n                type: Input,\n                args: ['tooltipPopupDelay']\n            }], tooltipFadeDuration: [{\n                type: Input\n            }], _tooltipTrigger: [{\n                type: Input,\n                args: ['tooltipTrigger']\n            }], tooltipStateChanged: [{\n                type: Output\n            }] } });\n\nclass TooltipModule {\n    static forRoot() {\n        return {\n            ngModule: TooltipModule,\n            providers: [ComponentLoaderFactory, PositioningService]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipModule, declarations: [TooltipDirective, TooltipContainerComponent], imports: [CommonModule], exports: [TooltipDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TooltipDirective, TooltipContainerComponent],\n                    exports: [TooltipDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}